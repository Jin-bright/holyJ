<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.oee.together.model.dao.TogetherDao">

	<!-- 🐱 하나 시작 🐱 -->
	<select id="selectTogetherList" resultMap="togetherMap">
	select
		*
	from
		together
	where
		writer = #{memberId}
	</select>
	
	<resultMap type="together" id="togetherMap"></resultMap>	
	<!-- 🐱 하나 끝 🐱 -->
	
	<!-- 👻 정은 시작 👻 -->
	<!-- 동네 범위에 맞는 게시글 찾기 -->
	<select id="selectTogetherListByDongName" resultMap="togetherDetailMap">
		select
    		*
		from
			(
			select
				t.*,
    			(
        		select 
        			dong_name 
        		from 
            		member m right join dong d
                		on m.dong_no = d.dong_no
        		where 
        			member_id = t.writer
        		) dong_name
			from
    			together t
    		)
		where
    		dong_name in 
    		<foreach collection="myDongList" item="dongName" open="(" close=")" separator=",">
				#{dongName}
			</foreach>
			<if test="categoryNo != null and categoryNo != ''">
			and
				category_no = #{categoryNo}
			</if>
			<if test="status != null and status != ''">
			and
				status = #{status}
			</if>
		order by 
			reg_date desc
	</select>
	
	<!-- 같이해요 게시글 수 조회 -->
	<select id="getTogetherTotalCount" resultMap="togetherTotalCountMap">
		select
			count(*)
		from
			(
			select
				t.*,
    			(
        		select 
        			dong_name 
        		from 
            		member m right join dong d
                		on m.dong_no = d.dong_no
        		where 
        			member_id = t.writer
        		) dong_name
			from
    			together t
    		)
		where
    		dong_name in 
    		<foreach collection="myDongList" item="dongName" open="(" close=")" separator=",">
				#{dongName}
			</foreach>
			<if test="categoryNo != null and categoryNo != ''">
			and
				category_no = #{categoryNo}
			</if>
			<if test="status != null and status != ''">
			and
				status = #{status}
			</if>
	</select>
	
	<resultMap id="togetherTotalCountMap" type="java.lang.Integer" />
	
	<!-- 같이해요 한건 조회 -->
	<select id="selectTogetherByNo" resultMap="togetherDetailMap">
		select
		    t.*,
		    (select nickname from member where member_id = t.writer) nickname,
		    (select manner from member where member_id = t.writer) manner,
		    (select profile_img from member where member_id = t.writer) profile_img
		from
			(
		    select
		        t.*,
		        (
		        select 
		            dong_name 
		        from 
		            member m right join dong d
		                on m.dong_no = d.dong_no
		        where member_id = t.writer
		        ) dong_name
		from
		    together t
		    ) t
		where
		    no = #{no}
	</select>
	
	<resultMap type="together" id="togetherDetailMap">
		<id column="NO" property="no"/>
		<result column="WRITER" property="writer"/>
		<result column="CATEGORY_NO" property="categoryNo"/>
		<result column="TITLE" property="title"/>
		<result column="CONTENT" property="content"/>
		<result column="JOIN_CNT" property="joinCnt"/>
		<result column="DATE_TIME" property="dateTime"/>
		<result column="PLACE" property="place"/>
		<result column="GENDER" property="gender"/>
		<result column="AGE" property="age"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="STATUS" property="status"/>
		<association property="member" javaType="member">
			<id column="MEMBER_ID" property="memberId"/>
			<result column="NICKNAME" property="nickname"/>
			<result column="MANNER" property="manner"/>
			<result column="PROFILE_IMG" property="profileImg"/>
		</association>
		<association property="dong" javaType="dong">
			<id column="DONG_NO" property="dongNo"/>
			<result column="DONG_NAME" property="dongName"/>
		</association>
	</resultMap>
	
	<!-- 같이해요 참가자 목록 -->
	<select id="joinMemberListByBoardNo" resultMap="togetherChatMap" parameterType="java.util.Map">
	  select
	    c.*,
	    nickname,
	    profile_img
	  from
	    together_chat c left join member m
	        on c.member_id = m.member_id
	  where
	    together_no in
	    <foreach collection="boardNoList" item="boardNo" open="(" close=")" separator=",">
	        #{boardNo}
	    </foreach>
	  order by
    	reg_date asc
	</select>
	
	<resultMap type="joinMember" id="togetherChatMap">
		<id column="chatroom_no" property="chatroomNo"/>
		<result column="together_no" property="togetherNo"/>
		<result column="member_id" property="memberId"/>
		<result column="role" property="role"/>
		<result column="reg_date" property="regDate"/>
		<result column="last_check" property="lastCheck"/>
		<association property="member" javaType="member">
			<id column="MEMBER_ID" property="memberId"/>
			<result column="NICKNAME" property="nickname"/>
			<result column="PROFILE_IMG" property="profileImg"/>
		</association>
	</resultMap>
	
	<!-- 같이해요 참가자 수 목록 -->
	<select id="getJoinMemberCnt" resultMap="joinMemberCntMap" parameterType="java.util.Map">
		select
		    together_no,
		    count(*)  join_cnt
		from
		    together_chat
		where
		    together_no in
		    <foreach collection="boardNoList" item="boardNo" open="(" close=")" separator=",">
	        	#{boardNo}
	    	</foreach>
	    group by
   			together_no
	</select>
	
	<resultMap type="joinMember" id="joinMemberCntMap"></resultMap>
	
	<!-- 게시글 등록 -->
	<insert id="insertTogether">
		insert into 
		    together
		values (
		    SEQ_TOGETHER_NO.nextval,
		    #{writer},
		    #{categoryNo},
		    #{title},
		    #{content},
		    #{joinCnt},
		    #{dateTime},
		    #{place},
		    #{gender},
		    #{age},
		    default,
		    default
		)
		<selectKey order="AFTER" resultType="_int" keyProperty="no">
			select 
				SEQ_TOGETHER_NO.currval
			from
				dual
		</selectKey>
	</insert>
	
	<!-- 같이해요 등록시 글쓴이 채팅방에 등록 -->
	<insert id="insertTogetherChat">
		insert into 
		    together_chat
		values (
		    SEQ_TOGETHER_CHATROOM_NO.nextval,
		    #{togetherNo},
		    #{memberId},
		    #{role},
		    default,
		    default
		)
	</insert>
	
	<!-- 같이해요 수정 -->
	<update id="togetherUpdate">
		update
			together
		set
			writer = #{writer},
			category_no = #{categoryNo},
			title = #{title},
			content = #{content},
			join_cnt = #{joinCnt},
			date_time = #{dateTime},
			place = #{place},
			gender = #{gender},
			age = #{age}
		where
			no = #{no}
	</update>
	
	<!-- 날짜가 지난 모임 종료 -->
	<update id="TimeOverDateTimeUpdate">
		update 
		    together
		set
		    status = 'N'
		where
		    <![CDATA[date_time < sysdate]]>
	</update>
	
	<!-- 👻 정은 끝 👻 -->



</mapper>