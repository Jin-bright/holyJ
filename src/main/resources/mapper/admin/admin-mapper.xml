<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.oee.admin.model.dao.AdminDao">

	<!-- select -->
	
	<select id="selectAdminMemberList" resultMap="adminMap">
		select
			m.*,
			auth
		from
			member m join authority a
			on m.member_id = a.member_id
		<where>
			delete_date is null
		
			<if test="searchKeyword != null">
				and (m.member_id like '%' || #{searchKeyword} || '%' 
				or auth like '%' || #{searchKeyword} || '%' 
				or nickname like '%' || #{searchKeyword} || '%' )
		    </if>
		</where>
		order by
			enroll_date desc
	</select>
	
	<resultMap type="member" id="adminMap">
		<id column="member_id" property="memberId"/>
		<result column="member_id" property="memberId"></result>
		<result column="password" property="password"></result>
		<result column="nickname" property="nickname"></result>
		<result column="phone" property="phone"></result>
		<result column="manner" property="manner"></result>
		<result column="report_cnt" property="reportCnt"></result>
		<result column="enroll_date" property="enrollDate"></result>
		<result column="delete_date" property="deleteDate"></result>
		<association property="auth" javaType="authority">
			<id column="member_id" property="memberId"/>
			<result column="member_id" property="memberId"/>
			<result column="auth" property="auth"/>
		</association>
	</resultMap>
	
	<select id="selectAdminCraigList" resultMap="craigMap">
		select
			*
		from
			craig
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<resultMap type="craig" id="craigMap"></resultMap>
	
	<select id="selectAdminLocalList" resultMap="localMap">
		select
			*
		from
			local
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<resultMap type="local" id="localMap">

	</resultMap>
	
	<select id="selectAdminTogetherList" resultMap="togetherMap">
		select
			*
		from
			together
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<resultMap type="together" id="togetherMap"></resultMap>
	
	<select id="selectAdminBoardReport" resultMap="boardReportMap">
		select 
			b.*, reason_name 
		from board_report b join report_reason r 
			on b.reason_no = r.reason_no 
		order by 
			reg_date desc
	</select>
	
	<resultMap type="boardReport" id="boardReportMap">
		<id column="report_no" property="reportNo"/>
		<result column="writer" property="writer"/>
		<result column="report_type" property="reportType"/>
		<result column="report_post_no" property="reportPostNo"/>
		<result column="reason_no" property="reasonNo"/>
		<result column="reg_date" property="regDate"/>
		<result column="status" property="status"/>
		<association property="reportReason" javaType="reportReason">
			<id column="reason_no" property="reasonNo"/>
			<result column="reason_no" property="reasonNo" />
			<result column="report_type" property="reportType" />
			<result column="reason_name" property="reasonName" />	
		</association>
	</resultMap>
	
	<select id="selectAdminUserReport" resultMap="userReportMap">
		select 
			u.*, reason_name 
		from 
			user_report u join report_reason r 
			on u.reason_no = r.reason_no 
		order by 
			reg_date desc
	</select>
	
	<resultMap type="userReport" id="userReportMap">
		<id column="report_no" property="reportNo"/>
		<result column="writer" property="writer"/>
		<result column="reason_no" property="reasonNo"/>
		<result column="reported_member" property="reportedMember"/>
		<result column="reg_date" property="regDate"/>
		<result column="status" property="status"/>
		<association property="reportReason" javaType="reportReason">
			<id column="reason_no" property="reasonNo"/>
			<result column="reason_no" property="reasonNo" />
			<result column="report_type" property="reportType" />
			<result column="reason_name" property="reasonName" />	
		</association>
	</resultMap>
	
	<select id="selectAdminMemberTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			member m join authority a
			on m.member_id = a.member_id
		<where>
			delete_date is null
			
			<if test="searchKeyword != null">
				and (m.member_id like '%' || #{searchKeyword} || '%' 
				or auth like '%' || #{searchKeyword} || '%' 
				or nickname like '%' || #{searchKeyword} || '%' )
		    </if>
		</where>
		order by
			enroll_date desc
	</select>
	
	<select id="selectAdminCraigTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			craig
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<select id="selectAdminLocalTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			local
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<select id="selectAdminTogetherTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			together
		<where>
			<if test="searchKeyword != null">
				(writer like '%' || #{searchKeyword} || '%' 
				or title like '%' || #{searchKeyword} || '%')
		    </if>
		</where>
		order by
			reg_date desc
	</select>
	
	<select id="selectAdminBoardReportTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			board_report
		order by
			reg_date desc
	</select>
	
	<select id="selectAdminUserReportTotalCount" resultMap="adminTotalCountMap">
		select
			count(*)
		from
			user_report
		order by
			reg_date desc
	</select>
	
	<resultMap type="java.lang.Integer" id="adminTotalCountMap"></resultMap>
	
	<!-- update -->
	
	<update id="updateAdminMemberRole">
		update
			(select
				m.*,
				auth
			from
				member m join authority a
				on m.member_id = a.member_id
	            )
		set
    		auth = #{auth}
		where
		    member_id = #{memberId}
	</update>
	
	<update id="updateAdminCraigCategory">
		update
			craig
		set
			category_no = #{categoryNo}
		where
			no = #{no}
	</update>
	
	<update id="updateAdminLocalCategory">
		update
			local
		set
			category_no = #{categoryNo}
		where
			no = #{no}
	</update>
	
	<update id="updateAdminTogetherCategory">
		update
			together
		set
			category_no = #{categoryNo}
		where
			no = #{no}
	</update>
	
	<update id="updateAdminMemberUnregister">
		update
			member
		set
			delete_date = sysdate
		where
			member_id = #{memberId}
	</update>
	
	<update id="updateAdminBoardReportHandle">
		update
			board_report
		set
			status = 'Y'
		where
			report_no = #{reportNo}
	</update>
	
	<update id="updateAdminCraigBoardReportYn">
		update
		 	craig
		set
			report_yn = 'Y'
		where
			no = #{reportPostNo}
	</update>
	
	<update id="updateAdminCraigMemberBoardReportCnt">
		update
			member
		set
			report_cnt = report_cnt + 1
		where
			member_id = 
			(select
				writer
			from
				craig
			where
				no = #{reportPostNo})
	</update>
	
	<update id="updateAdminLocalBoardReportYn">
		update
		 	local
		set
			report_yn = 'Y'
		where
			no = #{reportPostNo}
	</update>
	
	<update id="updateAdminLocalMemberBoardReportCnt">
		update
			member
		set
			report_cnt = report_cnt + 1
		where
			member_id = 
			(select
				writer
			from
				local
			where
				no = #{reportPostNo})
	</update>
	
	<update id="updateAdminTogetherBoardReportYn">
		update
		 	together
		set
			report_yn = 'Y'
		where
			no = #{reportPostNo}
	</update>
	
	<update id="updateAdminTogetherMemberBoardReportCnt">
		update
			member
		set
			report_cnt = report_cnt + 1
		where
			member_id = 
			(select
				writer
			from
				together
			where
				no = #{reportPostNo})
	</update>
	
	<update id="updateAdminUserReportHandle">
		update
			user_report
		set
			status = 'Y'
		where
			report_no = #{reportNo}
	</update>
	
	<update id="updateAdminMemberUserReportCnt">
		update
			member
		set
			report_cnt = report_cnt + 1
		where
			member_id = #{reportedMember}
	</update>
	
	<!-- delete -->
	
	<delete id="deleteAdminCraig">
		delete from
			craig
		where
			no = #{no}		
	</delete>
	
		<delete id="deleteAdminLocal">
		delete from
			local
		where
			no = #{no}		
	</delete>
	
		<delete id="deleteAdminTogether">
		delete from
			together
		where
			no = #{no}		
	</delete>

</mapper>